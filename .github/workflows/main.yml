name: "Auto-Checkin(glados/ikuuu)"

on:
  schedule:    
    # 从 7:00 (UTC) 开始，每隔12小时运行一次
    # 实际运行时间为 07:00 和 19:00 (UTC) / 15:00 和 03:00 (UTC+8) 
    # - cron: "0 7/12 * * *"
    - cron: "0 7,19 * * *"
  workflow_dispatch:

env:
  RUN_ENV: 'prod'
  WORKFLOW_FILE_NAME: 'main.yml' # 和action yml名字保持一致

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          # 设置运行脚本的 Python 版本，建议使用稳定版本
          python-version: '3.8'
          # 增加缓存，加快速度
          cache: 'pip'

      - name: Set current date (UTC)
        id: date
        run: echo "TODAY=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set token existence
        # secrets 上下文只能在表达式中使用，而不能直接在条件语句中使用，做一次转换
        run: |
          if [[ -n "${{ secrets.GH_ACCESS_TOKEN }}" ]]; then
            echo "HAS_TOKEN=true" >> $GITHUB_ENV
          else
            echo "HAS_TOKEN=false" >> $GITHUB_ENV
          fi

      - name: Random sleep
        if: github.event_name == 'schedule'
        run: sleep $(shuf -i 10-50 -n 1)

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download previous checkin status (if any from today)
        if: ${{ env.HAS_TOKEN == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          echo "--- Download Info ---"
          echo "Today (UTC): ${{ env.TODAY }}"
          echo "Current Run ID: ${{ github.run_id }}"
          echo "---------------------"
          PREVIOUS_RUN_ID=$(gh run list --workflow="${{ env.WORKFLOW_FILE_NAME }}" --status=success --json databaseId,createdAt --limit=5 \
            | jq --arg today "${{ env.TODAY }}" --argjson current_run_id "${{ github.run_id }}" \
            '.[] | select(.createdAt | startswith($today)) | select(.databaseId != $current_run_id) | .databaseId' \
            | head -n 1)

          if [[ -z "$PREVIOUS_RUN_ID" ]]; then
            echo "No successful run found for today. Proceeding normally."
          else
            echo "Found previous successful run from today: $PREVIOUS_RUN_ID. Attempting to download artifact."
            gh run download "$PREVIOUS_RUN_ID" -n "checkin-status-${{ env.TODAY }}" -p . || echo "Artifact download failed or artifact does not exist. Continuing."
          fi
        continue-on-error: true # 如果不存在，依然继续

      - name: Run Checkin
        env:
          # 需要添加Action Secrets
          # 添加Action Secrets的路径如下：Settings -> Security -> Secrets and variables -> Actions -> New repository secrets
          # glados配置，用||隔开
          GR_COOKIE: ${{ secrets.GR_COOKIE }}
          GLADOS_BASE_URL: ${{ secrets.GLADOS_BASE_URL }}
          # ikuuu配置，用||隔开
          EMAIL: ${{ secrets.EMAIL }}
          PASSWD: ${{ secrets.PASSWD }}
          IKUUU_BASE_URL: ${{ secrets.IKUUU_BASE_URL }}
          # 通知配置
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }} # telgram推送，选填
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }} # telgram推送，选填
          SERVERCHAN_KEY: ${{ secrets.SERVERCHAN_KEY }} # serverchan推送，选填
          PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }} # pushplus推送，选填
          # GitHub Access Token
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          python3 ./main.py

      - name: Upload current checkin status
        uses: actions/upload-artifact@v4
        if: ${{ env.HAS_TOKEN == 'true' }}
        with:
          name: checkin-status-${{ env.TODAY }}
          path: status.json
          retention-days: 1
